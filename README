AfterRender
===========

You can use this plugin to run code after your templates have been rendered.

You can use AfterRender in two ways. Either you can write your own code
that you want to apply after rendering, or you can use the default. If you
want the default (which adds comments to generated HTML showing which
template you're in, as well as showing locals), then set AFTER_RENDER=true
in the proper environment file (e.g. at the bottom of development.rb).
Otherwise, you can set AFTER_RENDER equal to a proc or a lambda, like so:

AFTER_RENDER = lambda { | h |  
   "<!-- code generated by: #{h[:template_path]} -->\n" + 
   rendered_template +
   "<!-- end of code generated by: #{h[:template_path} -->\n"
}

Here's the full list of values in the Hash that's passed to AFTER_RENDER:

:template_path        => The path to the template being rendered
:locals               => The locals, including the current object, passed 
                         to the template
:rendered_template    => The HTML generated after rendering the template
:parent_template_path => The path to the template that this one is nested 
                         in, if applicable

Tested on Rails 1.2.6